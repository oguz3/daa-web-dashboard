import Head from 'next/head';

import { Button, Container, Divider, Grid, Text, Title } from '@mantine/core';
import DashboardHeader from '@components/DashboardHeader';
import WelcomeBanner from '@components/WelcomeBanner';
import MirrorCard from '@components/MirrorCard';
import { useEffect } from 'react';
import { useLayoutStore } from '../../store/layoutStore';
import { useRouter } from 'next/router';
import { showNotification } from '@mantine/notifications';

import MirrorImage from '../../../public/assets/mirror-dummy.jpg';
export default function Dashboard() {
  const router = useRouter();

  const getAllMirrors = useLayoutStore((state) => state.getAllMirrors);
  const getMirrorById = useLayoutStore((state) => state.getMirrorById);
  const createMirror = useLayoutStore((state) => state.createMirror);
  const deleteMirror = useLayoutStore((state) => state.deleteMirror);

  const mirrors = useLayoutStore((state) => state.mirrors);

  useEffect(() => {
    getAllMirrors();
  }, [getAllMirrors]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <DashboardHeader />
      <WelcomeBanner />

      <Container mt="32px">
        <Title fz="20px" fw={600} ff="Inter, sans-serif">
          My Mirrors
        </Title>
        <Text mt="8px" fz="sm" c="#495057">
          You can edit your mirrors here. If you want to create a new mirror,
          you can do so by clicking the create button.
        </Text>
        <Button
          onClick={() => {
            createMirror()
              .then(() => {
                showNotification({
                  title: 'Başarılı',
                  message: 'Ayna başarıyla oluşturuldu',
                });
              })
              .catch(() => {
                showNotification({
                  title: 'Hata',
                  message: 'Ayna oluşturulurken bir hata oluştu',
                });
              });
          }}
          mt="md"
        >
          Create mirror
        </Button>

        <Divider mb="xl" mt="xl" />

        <Grid>
          {mirrors && !!mirrors.length
            ? mirrors.map((mirror) => (
                <Grid.Col key={mirror.id} span={4}>
                  <MirrorCard
                    image={MirrorImage.src}
                    title={mirror.layoutName}
                    description="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
                    handlePreview={() =>
                      getMirrorById(mirror.id).then(() => {
                        router.push(`/mirror/${mirror.id}/preview`);
                      })
                    }
                    handleEdit={() =>
                      getMirrorById(mirror.id).then(() => {
                        router.push(`/mirror/${mirror.id}/builder`);
                      })
                    }
                    handleDelete={() =>
                      deleteMirror(mirror.id).then(() => {
                        showNotification({
                          title: 'Başarılı',
                          message: 'Ayna başarıyla silindi',
                        });
                      })
                    }
                  />
                </Grid.Col>
              ))
            : null}
        </Grid>
      </Container>
    </>
  );
}
